# -*- coding: utf-8 -*-


import requests
from lxml import etree
from pytesseractImg import getverify
import re
import os
try:
    import cookielib
except:
    import http.cookiejar as cookielib
import time


class SocialLogin(object):

    def __init__(self):
        self.headers = {
            'Host': 'www.bjrbj.gov.cn',
            'Referer': 'http://www.bjrbj.gov.cn/csibiz/indinfo/login.jsp',
            'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0',
        }
        # 提交参数url
        self.post_url = 'http://www.bjrbj.gov.cn/csibiz/indinfo/login_check'
        # 登录url
        self.index_url='http://www.bjrbj.gov.cn/csibiz/urbmi/login.jsp'
        self.session = requests.session()

    def get_captcha(self):
        # 构造获取验证码的头部
        headers = {
            'Host': 'www.bjrbj.gov.cn',
            'Referer': 'http://www.bjrbj.gov.cn/csibiz/indinfo/login.jsp',
            'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:41.0) Gecko/20100101 Firefox/41.0',
            'Accept': "image/png,image/*;q=0.8,*/*;q=0.5"
        }
        t = str(int(time.time() * 1000))
        captcha_url = 'http://www.bjrbj.gov.cn/csibiz/indinfo/validationCodeServlet.do'
        r = self.session.get(captcha_url, headers=headers,timeout=30)
        img_name='captcha'+t+'.jpg'
        # 下载验证码
        with open(img_name, 'wb') as f:
            f.write(r.content)
            f.close()
        try:
            captcha=getverify(img_name)
        except:
            print(u'请到 %s 目录找到captcha.jpg 手动输入' % os.path.abspath('captcha.jpg'))
        return captcha

    def get_type_flag(self):
        # 获取登录时需要用到的type flag
        index_page = self.session.get(self.index_url, headers=self.headers)
        html = index_page.content
        typepattern = r'id="type" value="(.*?)"'
        flagpattern = r'id="flag" value="(.*?)"'
        # 这里的type flag返回的是一个list
        type = re.findall(typepattern, html)
        flag = re.findall(flagpattern,html)
        return type[0],flag[0]



    def post_param(self,username,password):
        # 注意应先拿到type flag
        type, flag = self.get_type_flag()
        # 获取验证码
        captcha=self.get_captcha()
        # 构造传递参数
        post_data = {
            'type': type,
            'flag': flag,
            'j_username': username,
            'j_password': password,
            'safecode': captcha,
            'x':27,
            'y':15,
        }
        try:
            # 登录构造
            response = self.session.post(self.post_url, data=post_data, headers=self.headers)
            print response.request.headers
        except Exception as e:
            print "fail!!!!!"


if __name__ == "__main__":
    social = SocialLogin()
    username = '*********'
    password = '********'
    social.post_param(username,password)
