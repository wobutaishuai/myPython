# -*- coding: utf-8 -*-


import requests
from pytesseractImg import getverify
import re
import os
from UserAgent import User_Agent_PC
import random
from lxml import etree
import mysqlUtil
# try:
#     import cookielib
# except:
#     import http.cookiejar as cookielib
import time
import sys
reload(sys)
sys.setdefaultencoding('utf8')


class SocialLogin(object):

    def __init__(self):
        self.userAgent = random.choice(User_Agent_PC)
        # 提交参数url
        self.post_url = 'http://www.bjrbj.gov.cn/csibiz/indinfo/login_check'
        # 登录url
        self.index_url='http://www.bjrbj.gov.cn/csibiz/urbmi/login.jsp'
        self.session = requests.session()
        self.headers = {
            'Host': 'www.bjrbj.gov.cn',
            'Referer': 'http://www.bjrbj.gov.cn/csibiz/indinfo/login.jsp',
            'User-Agent': self.userAgent,
        }
        self.captcha_url = 'http://www.bjrbj.gov.cn/csibiz/indinfo/validationCodeServlet.do'

    def get_captcha(self):
        # 构造获取验证码的头部
        headers = {
            'Host': 'www.bjrbj.gov.cn',
            'Referer': 'http://www.bjrbj.gov.cn/csibiz/indinfo/login.jsp',
            'User-Agent': self.userAgent,
            'Accept': "image/png,image/*;q=0.8,*/*;q=0.5"
        }
        t = str(int(time.time() * 1000))
        r = self.session.get(self.captcha_url, headers=headers,timeout=30)
        path = os.getcwd() + "picture/"
        if os.path.exists(path):
            pass
        else:
            os.mkdir(path)
        t = str(int(time.time() * 1000))
        img_name = path + 'captcha' + t + '.jpg'
        # 下载验证码
        with open(img_name, 'wb') as f:
            f.write(r.content)
            f.close()
        try:
            captcha=getverify(img_name, 1)
        except:
            print(u'请到 %s 目录找到captcha.jpg 手动输入' % os.path.abspath('captcha.jpg'))
        return captcha

    def get_type_flag(self):
        # 获取登录时需要用到的type flag
        index_page = self.session.get(self.index_url, headers=self.headers)
        html = index_page.content
        typepattern = r'id="type" value="(.*?)"'
        flagpattern = r'id="flag" value="(.*?)"'
        # 这里的type flag返回的是一个list
        type = re.findall(typepattern, html)
        flag = re.findall(flagpattern,html)
        return type[0],flag[0]



    def post_param(self,username,password):
        # 注意应先拿到type flag
        type, flag = self.get_type_flag()
        # 获取验证码
        captcha=self.get_captcha()
        # 构造传递参数
        post_data = {
            'type': type,
            'flag': flag,
            'j_username': username,
            'j_password': password,
            'safecode': captcha,
            'x': 27,
            'y': 15,
        }
        try:
            # 登录构造
            response = self.session.post(self.post_url, data=post_data, headers=self.headers)
            time.sleep(1)
            res = self.session.post("http://www.bjrbj.gov.cn/csibiz/indinfo/search/ind/indNewInfoSearchAction")
            if res:
                return res.content
        except Exception as e:
            print "fail!!!!!"

    def save_item(self, htmlpage):
        list = []
        htmletree = etree.HTML(htmlpage, parser=etree.HTMLParser(encoding='utf-8'))
        messages = htmletree.xpath(".//form[@id='printForm']/table[1]/tr/td/text()")[0].split("  ")
        for item in messages:
            if item and item != '\r\n':
                list.append(item.strip().split("：")[1].strip())
        com_name = list[0]
        com_code = list[1]
        insure_code = list[2]
        insure_city = "北京"+list[3]
        real_names =  htmletree.xpath(".//*[@id='printForm']/table[2]/tr[2]/td[2]/text()")
        if real_names:
            real_name = real_names[0]
        else:
            real_name = ""
        id_cards = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[2]/td[4]/text()")
        if id_cards:
            id_card = id_cards[0]
        else:
            id_card = ""
        sexs = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[3]/td[2]/text()")
        if sexs:
            sex = sexs[0]
        else:
            sexs = ""
        birthdays = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[3]/td[4]/text()")
        if birthdays:
            birthday = birthdays[0]
        else:
            birthday = ""
        work_start_days = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[5]/td[4]/text()")
        if work_start_days:
            work_start_day = work_start_days[0]
        else:
            work_start_day = ""
        acc_props = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[6]/td[4]/text()")
        if acc_props:
            acc_prop = acc_props[0]
        else:
            acc_prop = ""
        acc_addrs = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[7]/td[2]/text()")
        if acc_addrs:
            acc_addr = acc_addrs[0]
        else:
            acc_addr = ""
        degrees = htmletree.xpath("..//*[@id='printForm']/table[2]/tr[10]/td[6]/text()")
        if degrees:
            degree = degrees[0]
        else:
            degree = ""
        cellphones = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[11]/td[4]/text()")
        if cellphones:
            cellphone = cellphones[0]
        else:
            cellphone = ""
        phones = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[11]/td[2]/text()")
        if phones:
            phone = phones[0]
        else:
            phone = ""
        emails = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[10]/td[4]/text()")
        if emails:
            email = emails[0]
        else:
            email = ""
        insure_statuses = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[1]/td[2]/text()")
        insure_status = ""
        if insure_statuses:
            for ins in insure_statuses :
                insure_status += ins.strip()
        insure_month_moneys = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[11]/td[6]/text()")
        if insure_month_moneys:
            insure_month_money = insure_month_moneys[0]
        else:
            insure_month_money = ""
        nations = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[4]/td[2]/text()")
        if nations:
            nation = nations[0]
        else:
            nation = ""
        live_addrs = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[8]/td[2]/text()")
        if live_addrs:
            live_addr = live_addrs[0]
        else:
            live_addr = ""
        live_postcodes = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[8]/td[4]/text()")
        if live_postcodes:
            live_postcode = live_postcodes[0]
        else:
            live_postcode = ""
        worker_nations = htmletree.xpath(".//*[@id='printForm']/table[2]/tr[14]/td[4]/text()")
        if worker_nations:
            worker_nation = worker_nations[0]
        else:
            worker_nation = ""
        sql = "INSERT INTO insure_user VALUES (NULL , %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s,%s, %s, %s)"
        param = (real_name, id_card, sex, birthday, work_start_day, acc_prop, acc_addr, degree, cellphone,phone, email, insure_code, insure_city, insure_status, insure_month_money, com_name, com_code, nation, live_addr, live_postcode, "", worker_nation, "")
        mysqlUtil.insert_database(sql,param)

    def get_insure_payment(self,url):
        res = self.session.post(url)
        if len(res.content) > 600:
            return res.content

    def html_parse(self, content, typename):
        try:
            list = []
            htmletree = etree.HTML(content, parser=etree.HTMLParser(encoding='utf-8'))
            messages = htmletree.xpath(".//table[1]/tr[1]/td/text()")[0]
            id_cardRex = re.compile(r'\d+')
            id_card=re.search(id_cardRex,messages).group().strip()
            paramlist = []
            if typename == "oldage":
                typeid = '1'
                pay_date = htmletree.xpath(".//table[1]/tr/td[1]/text()")
                base_rmb = htmletree.xpath(".//table[1]/tr/td[3]/text()")
                com_rmb = htmletree.xpath(".//table[1]/tr/td[4]/text()")
                per_rmb = htmletree.xpath(".//table[1]/tr/td[5]/text()")
                com_name = htmletree.xpath(".//table[1]/tr/td[6]/text()")
                pay_type = htmletree.xpath(".//table[1]/tr/td[2]/text()")
                for i in range(len(base_rmb)):
                    if base_rmb[i] != "-":
                        param = (
                        id_card, pay_date[i + 1].strip(), "", "", base_rmb[i].strip(), com_rmb[i].strip(), per_rmb[i].strip(), "", "", com_name[i].strip(),
                        pay_type[i], typeid)
                        paramlist.append(param)
            elif typename == "unemployment":
                pay_date = htmletree.xpath(".//table[1]/tr/td[1]/text()")
                base_rmb = htmletree.xpath(".//table[1]/tr/td[2]/text()")
                com_rmb = htmletree.xpath(".//table[1]/tr/td[3]/text()")
                per_rmb = htmletree.xpath(".//table[1]/tr/td[4]/text()")
                typeid = '2'
                for i in range(1,len(com_rmb)):
                    if base_rmb[i] != "-":
                        param = (
                            id_card, pay_date[i + 1].strip(), "", "", base_rmb[i].strip(), com_rmb[i].strip(), per_rmb[i].strip(), "", "", "",
                            "", typeid)
                        paramlist.append(param)
            elif typename == "injuries":
                typeid = '3'
                pay_date = htmletree.xpath(".//table[1]/tr/td[1]/text()")
                base_rmb = htmletree.xpath(".//table[1]/tr/td[2]/text()")
                com_rmb = htmletree.xpath(".//table[1]/tr/td[3]/text()")
                for i in range(1,len(com_rmb)):
                    if base_rmb[i] != "-":
                        param = (
                            id_card, pay_date[i + 1].strip(), "", "", base_rmb[i].strip(), com_rmb[i].strip(), "", "", "", "",
                            "", typeid)
                        paramlist.append(param)
            elif typename == "maternity":
                typeid = '4'
                pay_date = htmletree.xpath(".//table[1]/tr/td[1]/text()")
                base_rmb = htmletree.xpath(".//table[1]/tr/td[2]/text()")
                com_rmb = htmletree.xpath(".//table[1]/tr/td[3]/text()")
                for i in range(1,len(com_rmb)):
                    if base_rmb[i] != "-":
                        param = (
                            id_card, pay_date[i + 1].strip(), "", "", base_rmb[i].strip(), com_rmb[i].strip(), "", "", "", "",
                            "", typeid)
                        paramlist.append(param)
            elif typename == "medicalcare":
                typeid = '5'
                pay_date = htmletree.xpath(".//table[1]/tr/td[1]/text()")
                base_rmb = htmletree.xpath(".//table[1]/tr/td[3]/text()")
                com_rmb = htmletree.xpath(".//table[1]/tr/td[4]/text()")
                per_rmb = htmletree.xpath(".//table[1]/tr/td[5]/text()")
                com_name = htmletree.xpath(".//table[1]/tr/td[6]/text()")
                pay_type = htmletree.xpath(".//table[1]/tr/td[2]/text()")
                for i in range(2, len(com_rmb)):
                    if base_rmb[i] != "-":
                        param = (
                            id_card, pay_date[i + 1].strip(), "", "", base_rmb[i].strip(), com_rmb[i].strip(), per_rmb[i].strip(), "", "", com_name[i].strip(),
                            pay_type[i].strip(), typeid)
                        paramlist.append(param)
            sql = "INSERT INTO insure_payment VALUES (NULL , %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
            if paramlist:
                mysqlUtil.insert_many_database(sql, paramlist)
        except Exception as e:
            print content


if __name__ == "__main__":
    social = SocialLogin()
    username = '********'
    password = '******'
    content=social.post_param(username,password)
    social.save_item(content)
    year = time.strftime("%Y", time.localtime())
    insuretypes = ['oldage', 'unemployment', 'injuries', 'maternity', 'medicalcare']
    for insuretype in insuretypes:
        for year in range(1995, int(year) + 1):
            t = str(int(time.time() * 1000))
            url = "http://www.bjrbj.gov.cn/csibiz/indinfo/search/ind/indPaySearchAction!%s?searchYear=%s&time=%s" % (insuretype, year, t)
            content=social.get_insure_payment(url)
            if content:
                print url
                social.html_parse(content, insuretype)



